buildscript {
  repositories {
    jcenter()
    google()
  }
  dependencies {
    //classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    //classpath 'org.owasp:dependency-check-gradle:1.4.5.1'
    classpath 'com.android.tools.build:gradle:3.5.2'
  }


}

repositories {
  mavenCentral()
  google()
  jcenter()
}


wrapper {
    gradleVersion = '5.6.4'
}

allprojects {
  version = '0.10.0'
  group = 'com.nedap.healthcare.archie'
  ext.gradleScriptDir = "${rootProject.projectDir}/gradle"
  //archivesBaseName = 'archie'

}

gradle.ext.ossrhUsernameSafe = hasProperty('ossrhUsername') ? ossrhUsername : ""
gradle.ext.ossrhPasswordSafe = hasProperty('ossrhPassword') ? ossrhPassword : ""
gradle.ext.shouldSign = hasProperty('signing.keyId')
gradle.ext.isParallel = hasProperty('org.gradle.parallel') ? project.property('org.gradle.parallel') == 'true' : false

subprojects {

  apply plugin: 'com.android.library'

  android {
    compileSdkVersion 28

    defaultConfig {
      minSdkVersion 24
      targetSdkVersion 28
      versionCode 1
      versionName "1.0"

      testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
      release {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      }
    }

  }
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  //compileJava.options.encoding = "UTF-8"
  //compileTestJava.options.encoding = "UTF-8"s

  repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    jcenter()
    google()
  }

  ext.reflectionsVersion = '0.9.11'
  ext.jacksonVersion = '2.9.10'

  dependencies {
    compile 'org.slf4j:slf4j-api:1.7.28'
    compile 'com.nedap.healthcare.archie:grammars:0.10.0'

    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

    compile 'com.google.guava:guava:28.1-jre'

    compile "org.reflections:reflections:${reflectionsVersion}"
    compile 'com.esotericsoftware:kryo-shaded:4.0.2' //for easy and relatively fast object cloning

    compile('commons-io:commons-io:2.6'){
      exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile 'org.apache.commons:commons-text:1.6'
    compile 'org.apache.commons:commons-lang3:3.8.1'

    //java 10 no longer has these included by default, so explicit dependency is needed.
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'com.sun.xml.bind:jaxb-core:2.3.0'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.0'
    compile 'javax.activation:activation:1.1.1'

    testCompile 'junit:junit:4.+'
    testCompile 'org.slf4j:slf4j-simple:1.7.25'

    compile 'com.github.zafarkhaja:java-semver:0.9.0'
  }

}

//subprojects {
  //apply plugin: 'org.owasp.dependencycheck'
  //apply from: "${gradleScriptDir}/publish-maven.gradle"

 // plugins {
   //   id 'com.github.ben-manes.versions' version '0.13.0'
 // }




//  javadoc {
//      options.encoding = 'UTF-8'
//  }

//  //configure the jar files: sources and javaod
//  task javadocJar(type: Jar) {
//    classifier = 'javadoc'
//    from javadoc
//  }

//  task sourcesJar(type: Jar) {
//      classifier = 'sources'
//      from sourceSets.main.allSource
//  }

//  artifacts {
//      archives javadocJar, sourcesJar
//  }

//  test {
//   testLogging {
//      events "failed"
//      exceptionFormat "full"
//    }
//  }

//}

//apply from: "${gradleScriptDir}/jacoco.gradle"
